/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package calcsolve;

import java.util.Arrays;
import java.util.Collections;
import javax.swing.JOptionPane; 

/**
 *
 * @author marco
 */
public class frameStat extends javax.swing.JFrame {

    /**
     * Creates new form frameStat
     */
    public frameStat() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        meanButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        modeButton = new javax.swing.JButton();
        medianButton = new javax.swing.JButton();
        hMeanButton = new javax.swing.JButton();
        gMeanButton = new javax.swing.JButton();
        stButton = new javax.swing.JButton();
        rangeButton = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        valueOne = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        meanButton.setText("Mean");
        meanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meanButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Enter your values sperated by a comma, then select math a function");

        modeButton.setText("Mode");
        modeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modeButtonActionPerformed(evt);
            }
        });

        medianButton.setText("Median");
        medianButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                medianButtonActionPerformed(evt);
            }
        });

        hMeanButton.setText("Harmonic Mean");
        hMeanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hMeanButtonActionPerformed(evt);
            }
        });

        gMeanButton.setText("Geometric Mean");
        gMeanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gMeanButtonActionPerformed(evt);
            }
        });

        stButton.setText("Standard Deviation");
        stButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stButtonActionPerformed(evt);
            }
        });

        rangeButton.setText("Range");
        rangeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rangeButtonActionPerformed(evt);
            }
        });

        jButton8.setText("<--Back");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jLabel2.setText("Values:");

        valueOne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valueOneActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(66, 66, 66)
                                .addComponent(rangeButton)
                                .addGap(142, 142, 142))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)))
                        .addComponent(valueOne, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(medianButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(modeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(meanButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(32, 32, 32)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(stButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(gMeanButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(hMeanButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jButton8))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(meanButton)
                    .addComponent(hMeanButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modeButton)
                    .addComponent(gMeanButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(medianButton)
                    .addComponent(stButton))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(rangeButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(valueOne, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(16, 16, 16)))
                .addComponent(jButton8)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void valueOneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valueOneActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_valueOneActionPerformed

    private void gMeanButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gMeanButtonActionPerformed
        // TODO add your handling code here:
        if (valueOne.getText().isEmpty() == false) {
            String list = valueOne.getText();
            String[] list1 = list.split(",");
            int num[] = new int[list1.length];
            for (int i = 0; i < list1.length; i++) {
                num[i] = Integer.parseInt(list1[i]);
            }
            double length = num.length;
            double sum = 1;
            for (int i = 0; i < num.length; i++) {
                sum *= num[i];
            }
            double answer = Math.pow( sum, 1/length);
            JOptionPane.showMessageDialog(this, "Geometric Mean: " + answer);

        } else {
            JOptionPane.showMessageDialog(this, "Enter your values.");
        }
    }//GEN-LAST:event_gMeanButtonActionPerformed

    private void meanButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_meanButtonActionPerformed
        // TODO add your handling code here:
        if (valueOne.getText().isEmpty() == false) {
            String list = valueOne.getText();
            String[] list1 = list.split(",");
            int num[] = new int[list1.length];
            for (int i = 0; i < list1.length; i++) {
                num[i] = Integer.parseInt(list1[i]);
            }
            double length = num.length;
            double sum = 0;
            for (int i = 0; i < num.length; i++) {
                sum += num[i];
            }
            double mean = sum / length;
            JOptionPane.showMessageDialog(this, "Mean: " + mean);
        } else {
            JOptionPane.showMessageDialog(this, "Enter your values.");
        }
    }//GEN-LAST:event_meanButtonActionPerformed

    private void modeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modeButtonActionPerformed
        // TODO add your handling code here:
        if (valueOne.getText().isEmpty() == false) {
            String list = valueOne.getText();
            String[] list1 = list.split(",");
            int num[] = new int[list1.length];
            for (int i = 0; i < list1.length; i++) {
                num[i] = Integer.parseInt(list1[i]);
            }
            int maxValue = 0;
            int maxCount = 0;
            for (int i = 0; i < num.length; ++i) {
                int count = 0;
                for (int j = 0; j < num.length; ++j) {
                    if (num[j] == num[i]) {
                        ++count;
                    }
                }
                if (count > maxCount) {
                    maxCount = count;
                    maxValue = num[i];
                }
            }
            JOptionPane.showMessageDialog(this, "Mode: " + maxValue);
        } else {
            JOptionPane.showMessageDialog(this, "Enter your values.");
        }
    }//GEN-LAST:event_modeButtonActionPerformed

    private void medianButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_medianButtonActionPerformed
        // TODO add your handling code here:
        if (valueOne.getText().isEmpty() == false) {
            String list = valueOne.getText();
            String[] list1 = list.split(",");
            int num[] = new int[list1.length];
            for (int i = 0; i < list1.length; i++) {
                num[i] = Integer.parseInt(list1[i]);
            }
            Arrays.sort(num);
            int middle = num.length / 2;
            if (num.length % 2 == 1) {
                JOptionPane.showMessageDialog(this, "Median: " + num[middle]);
            } else {
                JOptionPane.showMessageDialog(this, "Median: " + ((num[middle - 1] + num[middle]) / 2.0));
            }

        } else {
            JOptionPane.showMessageDialog(this, "Enter your values.");
        }
    }//GEN-LAST:event_medianButtonActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        this.dispose();
        frame1 frame = new frame1();
        frame.setVisible(true);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void rangeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rangeButtonActionPerformed
        // TODO add your handling code here:
        if (valueOne.getText().isEmpty() == false) {
            String list = valueOne.getText();
            String[] list1 = list.split(",");
            int num[] = new int[list1.length];
            for (int i = 0; i < list1.length; i++) {
                num[i] = Integer.parseInt(list1[i]);
            }
            int range = 0;
            int max = num[0];
            for (int i = 1; i < num.length; i++) {
                if (num[i] > max) {
                    max = num[i];
                }
            }
            int min = num[0];
            for (int i = 1; i < num.length; i++) {
                if (num[i] < min) {
                    min = num[i];
                }
            }
            range = max - min;
            JOptionPane.showMessageDialog(this, "Range: " + range);
        } else {
            JOptionPane.showMessageDialog(this, "Enter your values.");
        }
    }//GEN-LAST:event_rangeButtonActionPerformed

    private void hMeanButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hMeanButtonActionPerformed
        // TODO add your handling code here:
        if (valueOne.getText().isEmpty() == false) {
            String list = valueOne.getText();
            String[] list1 = list.split(",");
            int num[] = new int[list1.length];
            for (int i = 0; i < list1.length; i++) {
                num[i] = Integer.parseInt(list1[i]);
            }
            int length = num.length;
            double sum = 0;
            for (int i = 0; i < length; i++) {
                sum += (1.0) / num[i];
            }
            JOptionPane.showMessageDialog(this, "Your Harmonic Mean is: " + num.length/sum);

        } else {
            JOptionPane.showMessageDialog(this, "Enter your values.");
        }
    }//GEN-LAST:event_hMeanButtonActionPerformed

    private void stButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stButtonActionPerformed
        // TODO add your handling code here:
        if (valueOne.getText().isEmpty() == false) {
            String list = valueOne.getText();
            String[] list1 = list.split(",");
            int num[] = new int[list1.length];
            for (int i = 0; i < list1.length; i++) {
                num[i] = Integer.parseInt(list1[i]);
            }
            double length = num.length;
            double sum = 0;
            for (int i = 0; i < num.length; i++) {
                sum += num[i];
            }
            double mean = sum / length;
            double total = 0;
            for (int i = 0; i < num.length; i++) {
                total += Math.pow((double)num[i] - mean,2);
            }
            
            double answer = Math.sqrt(total/(length-1));
            
            JOptionPane.showMessageDialog(this, "Standard Deviation: " + answer);
            
            
        } else {
            JOptionPane.showMessageDialog(this, "Enter your values.");
        }
    }//GEN-LAST:event_stButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frameStat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frameStat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frameStat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frameStat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frameStat().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton gMeanButton;
    private javax.swing.JButton hMeanButton;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton meanButton;
    private javax.swing.JButton medianButton;
    private javax.swing.JButton modeButton;
    private javax.swing.JButton rangeButton;
    private javax.swing.JButton stButton;
    private javax.swing.JTextField valueOne;
    // End of variables declaration//GEN-END:variables
}
